m
}
cachemean()
cachemean(1:10)
cachemean(10)
data <- 1:10
cachemean(data)
makeCacheMatrix <- function(x = matrix()) {
xInv <- NULL
set <- function(y) {
x <<- y
xInv <<- NULL
}
get <- function() x
setinv <- function(inv) xInv <<- inv
getinv <- function() xInv
list(
set = set
,get = get
,setinv = setinv
,getinv = getinv
)
}
cacheSolve <- function(x, ...) {
xInv <- x$getinv()
if(!is.null(xInv)) {
message("getting cached data")
return(xInv)
}
data <- x$get()
xInv <- solve(data)
x$setinv(xInv)
xInv
}
bla <- makeCacheMatrix()
bla$set( matrix( c(23,54,23,90), 2, 2 ) )
bla
view(bla)
bla
cacheSolve(bla)
makeCacheMatrix(bla)
cacheSolve(bla)
cacheSolve(bla)
?getinv
??getinv
?list
makeCacheMatrix <- function(x = matrix()) {
xInv <- NULL
set <- function(y) {
x <<- y
xInv <<- NULL
}
get <- function() x
setinv <- function(inv) xInv <<- inv
getinv <- function() xInv
}
cacheSolve(bla)
xInvert <- x$getinvert()
x <- makeCacheMatrix()
x$set( matrix( c(23,54,23,90), 2, 2 ) )
## Assignment2: Caching the Inverse of a Matrix
## This fuction creates a matrix caching object based on a closure
makeCacheMatrix <- function(x = matrix()) {
xInvert <- NULL
set <- function(y) {
x <<- y
xInvert <<- NULL
}
get <- function() x
setinvert <- function(inv) xInvert <<- inv
getinvert <- function() xInvert
list(
set = set
,get = get
,setinvert = setinvert
,getinvert = getinvert
)
}
## This function returns the inverse of the underlying matrix. The first time it is called
## If xInvert is not null, then the data already exists and will be taken from the cache
## Otherwise it will be calcultated accordingly
cacheSolve <- function(x, ...) {
xInvert <- x$getinvert()
if(!is.null(xInvert)) {
message("data was in the cache")
return(xInvert)
}
data <- x$get()
xInvert <- solve(data)
x$setinvert(xInvert)
xInvert
}
bli <- makeCacheMatrix()
bli$set( matrix( c(23,54,23,90), 2, 2 ) )
cacheSolve(bli)
cacheSolve(bli)
blo <- matrix(c(2, 8, 6, 4), 2, 2)
View(blo)
cachesolve(blo)
blo <- makeCachemMatrix()
blo <- makeCachemMatrix()
blo <- matrix(c(2, 8, 6, 4), 2, 2)
blo <- makeCacheMatrix()
blo <- matrix(c(2, 8, 6, 4), 2, 2)
cachesolve(blo)
cacheSolve(blo)
blo <- makeCacheMatrix()
blo$set(matrix(c(2, 8, 6, 4), 2, 2))
cacheSolve(blo)
cacheSolve(blo)
xInvert <- NULL
set <- function(y) {
x <<- y
xInvert <<- NULL
}
get <- function() x
?set
?get
setinvert <- function(inv) xInvert <<- inv
getinvert <- function() xInvert
?inv
x <<- y
xInvert <<- NULL
}
get <- function() x
setinvert <- function(invert) xInvert <<- invert
getinvert <- function() xInvert
list(
set = set
,get = get
,setinvert = setinvert
,getinvert = getinvert
)
}
makeCacheMatrix <- function(x = matrix()) {
xInvert <- NULL
set <- function(y) {
x <<- y
xInvert <<- NULL
}
get <- function() x
setinvert <- function(invert) xInvert <<- invert
getinvert <- function() xInvert
list(
set = set
,get = get
,setinvert = setinvert
,getinvert = getinvert
)
}
library(datasets)
hist(airquality$Ozone)
with(airquality(Wind, Ozone))
?par
dev.cur()
getwd()
setwd("/Users/sergio/datasciencecoursera/exploratory1")
getwd()
setwd("/Users/sergio/datasciencecoursera/ExData_Plotting1")
plot1 <- read.table("household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors =FALSE)
View(plot1)
plot1sub <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
plot1sub <- plot1[plot1$Date %in% c("1/2/2007","2/2/2007") ,]
View(plot1sub)
png("plot1.png", width = 480, height = 480)
hist(as.numeric(plot1sub$Global_active_power), col="red",
main = "Global Active Power",xlab="Global Active Power (kilowatts)")
dev.off()
plot2 <- read.table("household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors =FALSE)
plot2sub <- plot1[plot1$Date %in% c("1/2/2007","2/2/2007") ,]
plot2date <- as.character(as.Date(data1$Date, "%d/%m/%Y"))
plot2sub <- plot2[plot2$Date %in% c("1/2/2007","2/2/2007") ,]
plot2date <- as.character(as.Date(plot2$Date, "%d/%m/%Y"))
plot2date1 <- paste(plot2date, subset$Time)
plot2date2 <- strptime(plot2date1, "%Y-%m-%d %H:%M:%S")
plot2date1 <- paste(plot2date, subset$Time)
plot2date <- as.character(as.Date(plot2sub$Date, "%d/%m/%Y"))
plot2date1 <- paste(plot2date, subset$Time)
Time
?Time
plot3 <- read.table("household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors =FALSE)
plot3sub <- plot3[plot3$Date %in% c("1/2/2007","2/2/2007") ,]
plot3date<- as.character(as.Date(subset$Date, "%d/%m/%Y"))
data$DateTime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
plot2sub$DateTime <- strptime(paste(plot2sub$Date, plot2sub$Time), "%d/%m/%Y %H:%M:%S")$DateTime <- strptime(paste(plot2sub$Date, plot2sub$Time), "%d/%m/%Y %H:%M:%S")$DateTime <- strptime(paste(plot2sub$Date, plot2sub$Time), "%d/%m/%Y %H:%M:%S")
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors =FALSE)
data1 <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
data2 <- as.character(as.Date(data1$Date, "%d/%m/%Y"))
data2a <- paste(data2, subset$Time)
data2b <- strptime(data2a, "%Y-%m-%d %H:%M:%S")
png("plot2.png", width = 480, height = 480)
plot(data2b, as.numeric(subset$Global_active_power), type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
# plot2.R - Global Active Power vs Time
# Read data
data <- read.table('../household_power_consumption.txt', sep=';',
header=T, colClasses = c('character', 'character',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric'), na.strings='?')
# Convert dates
data$DateTime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
# Get subset on two days in February, 2007
data <- subset(data, as.Date(DateTime) >= as.Date("2007-02-01") &
as.Date(DateTime) <= as.Date("2007-02-02"))
# Open plot2.png
png("plot2.png", height=480, width=480)
# Build graph global active power vs time
plot(data$DateTime,
data$Global_active_power,
pch=NA,
xlab="",
ylab="Global Active Power (kilowatts)")
# Draw the line
lines(data$DateTime, data$Global_active_power)
# Close PNG file
dev.off()
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors =FALSE)
data$DateTime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
data <- subset(data, as.Date(DateTime) >= as.Date("2007-02-01") &
as.Date(DateTime) <= as.Date("2007-02-02"))
png("plot2.png", height=480, width=480)
plot(data$DateTime,
data$Global_active_power,
pch=NA,
xlab="",
ylab="Global Active Power (kilowatts)")
# Draw the line
lines(data$DateTime, data$Global_active_power)
# Close PNG file
dev.off()
plot2 <- read.table("household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors =FALSE)
plot2$DateTime <- strptime(paste(plot2$Date, plot2$Time), "%d/%m/%Y %H:%M:%S")
plot2 <- subset(plot2, as.Date(DateTime) >= as.Date("2007-02-01") &
as.Date(DateTime) <= as.Date("2007-02-02"))
View(plot2)
View(data)
png("plot2.png", height=480, width=480)
plot(plot2$DateTime,
plot2$Global_active_power,
pch=NA,
xlab="",
ylab="Global Active Power (kilowatts)")
lines(plot2$DateTime, plot2$Global_active_power)
dev.off()
plot1 <- read.table("household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors =FALSE)
plot1$DateTime <- strptime(paste(plot1$Date, plot1$Time), "%d/%m/%Y %H:%M:%S")
plot1 <- subset(plot1, as.Date(DateTime) >= as.Date("2007-02-01") &
as.Date(DateTime) <= as.Date("2007-02-02"))
png("plot1.png", width = 480, height = 480)
hist(as.numeric(plot1sub$Global_active_power), col="red",
main = "Global Active Power",xlab="Global Active Power (kilowatts)")
hist(as.numeric(plot1$Global_active_power), col="red",
main = "Global Active Power",xlab="Global Active Power (kilowatts)")
dev.off()
plot3 <- read.table("household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors =FALSE)
plot3$DateTime <- strptime(paste(plot3$Date, plot3$Time), "%d/%m/%Y %H:%M:%S")
plot3 <- subset(plot3, as.Date(DateTime) >= as.Date("2007-02-01") & as.Date(DateTime) <= as.Date("2007-02-02"))
plot( plot3$DateTime
, plot3$Sub_metering_1
, pch=NA
, xlab=""
, ylab="Energy sub metering"
)
lines(plot3$DateTime, plot3$Sub_metering_1)
lines(plot3$DateTime, plot3$Sub_metering_2, col='red')
lines(plot3$DateTime, plot3$Sub_metering_3, col='blue')
legend( 'topright'
, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
, lty = c(1,1,1)
, col = c('black', 'red', 'blue')
)
dev.off()
png("plot3.png", height=480, width=480)
# plot the data
plot( plot3$DateTime
, plot3$Sub_metering_1
, pch=NA
, xlab=""
, ylab="Energy sub metering"
)
#add lines
lines(plot3$DateTime, plot3$Sub_metering_1)
lines(plot3$DateTime, plot3$Sub_metering_2, col='red')
lines(plot3$DateTime, plot3$Sub_metering_3, col='blue')
#add legend
legend( 'topright'
, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
, lty = c(1,1,1)
, col = c('black', 'red', 'blue')
)
#close PNG file
dev.off()
plot4 <- read.table(
"household_power_consumption.txt"
, sep=";"
, header=TRUE
, stringsAsFactors =FALSE
)
plot4$DateTime <- strptime(paste(plot4$Date, plot4$Time), "%d/%m/%Y %H:%M:%S")
plot4 <- subset(plot4, as.Date(DateTime) >= as.Date("2007-02-01") & as.Date(DateTime) <= as.Date("2007-02-02"))
png("plot4.png", height=480, width=480)
par(mfrow=c(2,2))
plot(
plot4$DateTime
, plot4$Global_active_power
, pch=NA
, xlab=""
, ylab="Global Active Power (kilowatts)"
)
plot(
plot4$DateTime
, plot4$Voltage
, ylab="Voltage"
, xlab="datetime"
, pch=NA
)
plot(
plot4$DateTime
, plot4$Sub_metering_1
, pch=NA
, xlab=""
, ylab="Energy sub metering"
)
lines(plot4$DateTime, plot4$Global_active_power)
lines(plot4$DateTime, plot4$Voltage)
lines(plot4$DateTime, plot4$Sub_metering_1)
lines(plot4$DateTime, plot4$Sub_metering_2, col='red')
lines(plot4$DateTime, plot4$Sub_metering_3, col='blue')
dev.off()
png("plot4.png", height=480, width=480)
par(mfrow=c(2,2))
plot(
plot4$DateTime
, plot4$Global_active_power
, pch=NA
, xlab=""
, ylab="Global Active Power (kilowatts)"
)
lines(plot4$DateTime, plot4$Global_active_power)
dev.off()
png("plot4.png", height=480, width=480)
par(mfrow=c(2,2))
plot(
plot4$DateTime
, plot4$Global_active_power
, pch=NA
, xlab=""
, ylab="Global Active Power (kilowatts)"
)
plot(
plot4$DateTime
, plot4$Voltage
, ylab="Voltage"
, xlab="datetime"
, pch=NA
)
lines(plot4$DateTime, plot4$Voltage)
dev.off()
png("plot4.png", height=480, width=480)
par(mfrow=c(2,2))
# plot the data
plot(
plot4$DateTime
, plot4$Global_active_power
, pch=NA
, xlab=""
, ylab="Global Active Power (kilowatts)"
)
lines(plot4$DateTime, plot4$Global_active_power)
plot(
plot4$DateTime
, plot4$Voltage
, ylab="Voltage"
, xlab="datetime"
, pch=NA
)
lines(plot4$DateTime, plot4$Voltage)
dev.off()
png("plot4.png", height=480, width=480)
par(mfrow=c(2,2))
# plot the data and add lines (1-1)
plot(
plot4$DateTime
, plot4$Global_active_power
, pch=NA
, xlab=""
, ylab="Global Active Power (kilowatts)"
)
lines(plot4$DateTime, plot4$Global_active_power)
# plot the data and add lines (1-2)
plot(
plot4$DateTime
, plot4$Voltage
, ylab="Voltage"
, xlab="datetime"
, pch=NA
)
lines(plot4$DateTime, plot4$Voltage)
# plot the data and add lines (2-1)
plot(
plot4$DateTime
, plot4$Sub_metering_1
, pch=NA
, xlab=""
, ylab="Energy sub metering"
)
lines(plot4$DateTime, plot4$Sub_metering_1)
lines(plot4$DateTime, plot4$Sub_metering_2, col='red')
lines(plot4$DateTime, plot4$Sub_metering_3, col='blue')
dev.off()
png("plot4.png", height=480, width=480)
par(mfrow=c(2,2))
# plot the data and add lines (1-1)
plot(
plot4$DateTime
, plot4$Global_active_power
, pch=NA
, xlab=""
, ylab="Global Active Power (kilowatts)"
)
lines(plot4$DateTime, plot4$Global_active_power)
# plot the data and add lines (1-2)
plot(
plot4$DateTime
, plot4$Voltage
, ylab="Voltage"
, xlab="datetime"
, pch=NA
)
lines(plot4$DateTime, plot4$Voltage)
# plot the data and add lines & legend (2-1)
plot(
plot4$DateTime
, plot4$Sub_metering_1
, pch=NA
, xlab=""
, ylab="Energy sub metering"
)
lines(plot4$DateTime, plot4$Sub_metering_1)
lines(plot4$DateTime, plot4$Sub_metering_2, col='red')
lines(plot4$DateTime, plot4$Sub_metering_3, col='blue')
legend(
'topright'
, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
, lty = c(1,1,1)
, col = c('black', 'red', 'blue')
, bty = 'n'
)
dev.off()
png("plot4.png", height=480, width=480)
par(mfrow=c(2,2))
# plot the data and add lines (1-1)
plot(
plot4$DateTime
, plot4$Global_active_power
, pch=NA
, xlab=""
, ylab="Global Active Power (kilowatts)"
)
lines(plot4$DateTime, plot4$Global_active_power)
# plot the data and add lines (1-2)
plot(
plot4$DateTime
, plot4$Voltage
, ylab="Voltage"
, xlab="datetime"
, pch=NA
)
lines(plot4$DateTime, plot4$Voltage)
# plot the data and add lines & legend (2-1)
plot(
plot4$DateTime
, plot4$Sub_metering_1
, pch=NA
, xlab=""
, ylab="Energy sub metering"
)
lines(plot4$DateTime, plot4$Sub_metering_1)
lines(plot4$DateTime, plot4$Sub_metering_2, col='red')
lines(plot4$DateTime, plot4$Sub_metering_3, col='blue')
legend(
'topright'
, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
, lty = c(1,1,1)
, col = c('black', 'red', 'blue')
, bty = 'n'
)
# plot the data and add lines (2-2)
with(plot4, plot(DateTime, Global_reactive_power, xlab='datetime', pch=NA))
with(plot4, lines(DateTime, Global_reactive_power))
#close PNG file
dev.off()
plot1 <- read.table(
"./household_power_consumption.txt"
, sep=";"
, header=TRUE
, stringsAsFactors =FALSE
)
plot1 <- read.table(
"../household_power_consumption.txt"
, sep=";"
, header=TRUE
, stringsAsFactors =FALSE
)
getwd()
plot4 <- read.table(
"../household_power_consumption.txt"
, sep=";"
, header=TRUE
, stringsAsFactors =FALSE
)
